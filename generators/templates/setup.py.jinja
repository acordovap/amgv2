from shared import config as CFG
from spade.behaviour import OneShotBehaviour
import time
from spade import quit_spade
from spade.agent import Agent

class Setup_Songs(Agent):
    async def setup(self):
        print("<Setup_Songs> {}".format(str(self.jid).split("@")[0]))
        self.add_behaviour(self.AcceptSubscriptions())

    class AcceptSubscriptions(OneShotBehaviour):
        def on_subscribe(self, jid):
            print("[{}] Agent {} asked for subscription. Let's aprove it.".format(self.agent.name, jid.split("@")[0]))
            self.presence.approve(jid)

        async def run(self):
            self.presence.on_subscribe =  self.on_subscribe
            self.presence.set_available()

{% for song in songs %}
class Setup_Notes_{{ song["s_name"] }}(Agent):
    async def setup(self):
        print("<Setup_Notes> {}".format(str(self.jid).split("@")[0]))
        self.add_behaviour(self.AskSubscription())

    class AskSubscription(OneShotBehaviour):
        async def run(self):
            #ver si no esta en contactos acutalmente
            self.presence.subscribe("{{ song["s_name"] }}" + CFG.XMPP_SERVER)
            # apagar agente (posiblemente en handler de subscribido)
{% endfor %}

if __name__ == "__main__":
    # Songs
    {%- for song in songs %}
    {{ song["s_name"] }} = Setup_Songs("{{ song["s_name"] }}"+CFG.XMPP_SERVER, ".")
    {{ song["s_name"] }}.start().result()
    {%- endfor %}

    # Notes
    {%- for song in songs %}
    {%- for track in song["s_tracks"] %}
    {%- for note in track["t_notes"] %}
    {{ song["s_name"]+"_"+track["t_name"]+"_"+note["n_name"].replace('-', '') }} = Setup_Notes_{{ song["s_name"] }}("{{ song["s_name"]+"_"+track["t_name"]+"_"+note["n_name"].replace('-', '') }}"+CFG.XMPP_SERVER, ".")
    {{ song["s_name"]+"_"+track["t_name"]+"_"+note["n_name"].replace('-', '') }}.start().result()
    {%- endfor %}
    {%- endfor %}
    {%- endfor %}

    while True:
        try:
            # si no hay notas quit
            time.sleep(1)
        except KeyboardInterrupt:
            break
    quit_spade()
