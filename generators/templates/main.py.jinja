from shared import config as CFG
{%- for song in songs %}
from agents.{{ song["s_name"] }} import *
{%- endfor %}
{%- for song in songs %}
{%- for track in song["s_tracks"] %}
{%- for note in track["t_notes"] %}
from agents.{{ song["s_name"]+"_"+track["t_name"]+"_"+note["n_name"].replace('-', '') }} import *
{%- endfor %}
{%- endfor %}
{%- endfor %}
import time
from spade import quit_spade
from spade.agent import Agent
from spade.behaviour import OneShotBehaviour
from spade.message import Message

class SyncAgent(Agent):
    async def setup(self):
        self.b = self.InformBehav()
        self.add_behaviour(self.b)

    class InformBehav(OneShotBehaviour):
        async def run(self):
            {%- for song in songs %}
            msg = Message(to="{{ song["s_name"] }}"+CFG.XMPP_SERVER)
            msg.set_metadata("performative", "sync")
            msg.body = "start"
            await self.send(msg)
            {%- endfor %}
            await self.agent.stop()

if __name__ == "__main__":
    # init songs
    s = []
    {%- for song in songs %}
    s.append(Song_{{ song["s_name"] }}("{{ song["s_name"] }}"+CFG.XMPP_SERVER, "."))
    s[-1].start().result()
    {%- endfor %}

    # init notes
    n = []
    {%- for song in songs %}
    {%- for track in song["s_tracks"] %}
    {%- for note in track["t_notes"] %}
    n.append( Note_{{ song["s_name"]+"_"+track["t_name"]+"_"+note["n_name"].replace('-', '') }}("{{ song["s_name"]+"_"+track["t_name"]+"_"+note["n_name"].replace('-', '') }}"+CFG.XMPP_SERVER, ".") )
    n[-1].start().result()
    {%- endfor %}
    {%- endfor %}
    {%- endfor %}

    # init syncagent
    syncagent = SyncAgent("sync"+CFG.XMPP_SERVER, ".")
    syncagent.start()

    keepgoing = True
    while keepgoing:
        try:
            keepgoing = not all(i.presence.state.show == PresenceShow.XA for i in s)
            time.sleep(1)
        except KeyboardInterrupt:
            break
    quit_spade()
    print("FINISHED> check ./out")
