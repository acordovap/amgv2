from shared import config as CFG
{%- for song in songs %}
from agents.{{ song["s_name"] }} import *
{%- endfor %}
{%- for song in songs %}
{%- for track in song["s_tracks"] %}
{%- for note in track["t_notes"] %}
from agents.{{ song["s_name"]+"_"+track["t_name"]+"_"+note["n_name"].replace('-', '') }} import *
{%- endfor %}
{%- endfor %}
{%- endfor %}
import time
from spade import quit_spade

if __name__ == "__main__":
    # init songs
    s = []
    {%- for song in songs %}
    s.append(Song_{{ song["s_name"] }}("{{ song["s_name"] }}"+CFG.XMPP_SERVER, "."))
    s[-1].start().result()
    {%- endfor %}

    # init notes
    n = []
    {%- for song in songs %}
    {%- for track in song["s_tracks"] %}
    {%- for note in track["t_notes"] %}
    n.append( Note_{{ song["s_name"]+"_"+track["t_name"]+"_"+note["n_name"].replace('-', '') }}("{{ song["s_name"]+"_"+track["t_name"]+"_"+note["n_name"].replace('-', '') }}"+CFG.XMPP_SERVER, ".") )
    n[-1].start().result()
    {%- endfor %}
    {%- endfor %}
    {%- endfor %}
    # FLAG for start receiving messages on song agents?

    keepgoing = True
    while keepgoing:
        try:
            keepgoing = not all(i.presence.state.show == PresenceShow.AWAY for i in s)
            time.sleep(1)
        except KeyboardInterrupt:
            break
    quit_spade()
    print("FINISHED> check ./out")
